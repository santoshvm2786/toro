/*
 * Copyright (c) 2018 Nam Nguyen, nam@ene.im
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

def haveFabricApiKey = !propOrDef("toro_ads_fabric_api_key", "").isEmpty()
if (haveFabricApiKey) {
  apply plugin: 'io.fabric'
}

android {
  compileSdkVersion rootProject.ext.androidVersion

  defaultConfig {
    applicationId "toro.demo.ads"
    // For demo purpose, I use 21 to get around dex method count limitation
    minSdkVersion demoMinSDK /* rootProject.ext.minSupportSDKVersion */
    targetSdkVersion rootProject.ext.androidVersion
    versionCode releaseVersionCode
    versionName "v" + releaseVersion
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary = true
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    disable 'InvalidPackage'
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  implementation "androidx.annotation:annotation:${rootProject.ext.androidXAnnotation}"
  implementation "com.google.android.material:material:${rootProject.ext.materialVersion}"
  implementation "androidx.appcompat:appcompat:${rootProject.ext.appCompatVersion}"
  implementation 'androidx.cardview:cardview:1.0.0'

  implementation project(':toro-core')
  implementation project(':toro-exoplayer')
  //noinspection GradleDependency
  implementation("com.google.android.exoplayer:exoplayer:${rootProject.ext.exoPlayer2Version}") {
    exclude group: 'com.android.support'
  }

  implementation(
      "com.google.android.exoplayer:extension-ima:${rootProject.ext.exoPlayer2Version}") {
    exclude group: 'com.android.support'
  }

  implementation("com.mopub:mopub-sdk:5.10.0@aar") {
    transitive = true
  }

  implementation "com.google.android.gms:play-services-ads:20.6.0"
  implementation "com.google.android.gms:play-services-base:18.0.1"
  implementation 'androidx.browser:browser:1.4.0'

  implementation "com.github.bumptech.glide:glide:${rootProject.ext.glide}"
  kapt "com.github.bumptech.glide:compiler:${rootProject.ext.glide}"

  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
  // Because RxAndroid releases are few and far between, it is recommended you also
  // explicitly depend on RxJava's latest version for bug fixes and new features.
  // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
  implementation 'io.reactivex.rxjava2:rxjava:2.2.20'

  debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.leackCanary}"
  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leackCanary}"
  testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leackCanary}"

  testImplementation "junit:junit:${rootProject.ext.jUnit}"
  androidTestImplementation 'androidx.test.ext:junit:1.1.3'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
